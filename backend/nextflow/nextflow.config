/*
 * F.A.D.E Nextflow Configuration - SLURM Only
 * Optimized for HPC cluster execution
 */

//
// -------- Parameters --------
//
params {
  // I/O
  query       = null
  output_dir  = "results_${new Date().format('yyyyMMdd_HHmmss')}"

  // Resource caps (global)
  max_cpus    = 16
  max_memory  = '64.GB'
  max_time    = '240.h'

  // Environment paths
  fade_env_path = "${System.getenv('SCRATCH') ?: '/scratch/rajagopalmohanraj.n'}/conda-envs/fade"

  // Gemini API
  gemini_api_key = System.getenv('GEMINI_API_KEY') ?: ""
  gemini_model   = "models/gemini-2.5-flash"

  // Debug & tracing
  debug         = false
  trace_enabled = false
}

//
// -------- SLURM Process Settings --------
//
process {
  executor      = 'slurm'
  queue         = 'short'
  scratch       = true

  // Default per-task resources
  cpus          = 1
  memory        = '4.GB'
  time          = '1.h'

  // Error handling
  errorStrategy = 'retry'
  maxRetries    = 2

  // Export key env variables to compute nodes
  env {
    GEMINI_API_KEY = params.gemini_api_key
    GEMINI_MODEL   = params.gemini_model
    PYTHONPATH     = "${projectDir}:${System.getenv('PYTHONPATH') ?: ''}"
  }

  // Safe environment setup
  beforeScript = '''
    set -euo pipefail
    
    # Debug info
    echo "Process: $task.process"
    echo "Working directory: $PWD"
    echo "GEMINI_API_KEY length: ${#GEMINI_API_KEY}"
  '''

  // Process-specific configurations
  withName: 'rcsbTargetSelection' {
    cpus = 2
    memory = '4.GB'
    time = '30.m'
    queue = 'short'
    clusterOptions = '--job-name=fade-target-selection'
  }

  // Resource labels for future use
  withLabel: process_low {
    cpus = 1
    memory = '2.GB'
    time = '30.m'
    queue = 'short'
  }
  
  withLabel: process_medium {
    cpus = 4
    memory = '8.GB'
    time = '2.h'
    queue = 'short'
  }
  
  withLabel: process_high {
    cpus = 8
    memory = '32.GB'
    time = '8.h'
    queue = 'short'
  }
}

//
// -------- SLURM Executor Settings --------
//
executor {
  name            = 'slurm'
  queueSize       = 50
  pollInterval    = '30s'
  submitRateLimit = '10/1min'
  exitReadTimeout = '270sec'
}

//
// -------- Profiles (Minimal) --------
//
profiles {
  // Debug mode
  debug {
    process.beforeScript = '''
      set -euo pipefail
      echo "DEBUG: Starting $task.process (task $task.index)"
      echo "DEBUG: Working directory: $PWD"
      echo "DEBUG: Project directory: ${projectDir}"
      echo "DEBUG: GEMINI_API_KEY length: ${#GEMINI_API_KEY}"
      echo "DEBUG: Environment variables:"
      env | grep -E "(GEMINI|PYTHONPATH|SCRATCH)" | head -10 || true
      echo "DEBUG: Available resources - CPUs: $task.cpus, Memory: $task.memory"
    '''
    process.afterScript = 'echo "DEBUG: Completed $task.process"'
    params.debug = true
    params.trace_enabled = true
  }

  // Stub testing (runs locally with mock outputs)
  stub {
    process {
      executor = 'local'
      stub     = true
      scratch  = false
      cpus     = 1
      memory   = '2.GB'
      time     = '5.m'
    }
    params.debug = true
  }
}

//
// -------- Reporting & Monitoring --------
//
timeline {
  enabled = true
  file    = "${params.output_dir}/pipeline_timeline.html"
}

report {
  enabled = true
  file    = "${params.output_dir}/pipeline_report.html"
}

trace {
  enabled = params.trace_enabled
  file    = "${params.output_dir}/pipeline_trace.txt"
  fields  = 'task_id,hash,native_id,process,tag,name,status,exit,cpus,time,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,workdir,scratch,error_action'
}

dag {
  enabled = true
  file    = "${params.output_dir}/pipeline_dag.svg"
}

//
// -------- Work Directory --------
//
workDir = "${System.getenv('SCRATCH') ?: '/scratch/rajagopalmohanraj.n'}/F.A.D.E/backend/work"

// Cleanup configuration
cleanup = false

//
// -------- Manifest --------
//
manifest {
  name            = 'F.A.D.E'
  author          = 'Naveen Rajagopal Mohan Raj'
  homePage        = 'https://github.com/Naveen-R-M/F.A.D.E'
  description     = 'Fully Agentic Drug Engine - AI-powered drug discovery pipeline'
  mainScript      = 'main.nf'
  nextflowVersion = '>=21.10.0'
  version         = '1.0.0'
}
